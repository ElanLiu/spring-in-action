<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
    xmlns:aop="http://www.springframework.org/schema/aop"
    xmlns:tx="http://www.springframework.org/schema/tx"
    xsi:schemaLocation="http://www.springframework.org/schema/beans
    	http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
    	http://www.springframework.org/schema/tx
    	http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
    	http://www.springframework.org/schema/aop
        http://www.springframework.org/schema/aop/spring-aop-3.0.xsd" >

	<!-- properties文件读取 -->
	<bean id="ResourceConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:config/config.properties</value>
			</list>
		</property>
	</bean>

	
	<!-- 声明事务性策略，还需要查阅资料，目前不知道如何使用 -->
	<tx:advice id="txAdvice" transaction-manager="transactionManager">
	    <tx:attributes>
	        <tx:method name="save*" propagation="REQUIRED"/>
	        <tx:method name="*" propagation="SUPPORTS" read-only="true"/>
	    </tx:attributes>
	</tx:advice>
	
	<!-- 声明事务性策略的简化版，在使用注解性事务中使用，不过删了没见报错，不知道如何使用-->
	<tx:annotation-driven transaction-manager="transactionManager"/>
	
	<!-- aop通知，不知道如何使用 -->
	<aop:config>
	    <aop:advisor pointcut="execution(* *..JdbcTemplateDao.*(..))" 
	        advice-ref="txAdvice"/>
	</aop:config>
	

	<bean id="jdbcTemplateDaoImpl" class="com.springinaction.database.impl.JdbcTemplateDaoImpl">
		<property name="jdbcTemplate" ref="jdbcTemplate" />
	</bean>
	
	<bean id="jdbcTransactionManager" class="com.springinaction.tm.JdbcTransactionManager">
	    <property name="transactionTemplate">
	        <bean class="org.springframework.transaction.support.TransactionTemplate">
	            <property name="transactionManager" ref="transactionManager" />
	        </bean>
	    </property>
	    <property name="jdbcTemplateDao" ref="jdbcTemplateDaoImpl" />
	</bean>

	<!-- spring数据源共有2种方式，dbcp和jdbc，建议dbcp方式 -->
	<!-- dbcp 数据库JDBC的配置 -->
	<bean id="dataSource" class="org.apache.commons.dbcp.BasicDataSource">
		<property name="driverClassName" value="${mysql.driver.class.name}" />
		<property name="url" value="${mysql.url}" />
		<property name="username" value="${mysql.username}" />
		<property name="password" value="${mysql.password}" />
		<!-- 保持测试环境和线上环境一致 -->
		<property name="maxActive" value="20" />
		<property name="initialSize" value="1" />
		<property name="maxWait" value="6000" />
		<property name="maxIdle" value="20" />
		<property name="minIdle" value="0" />
		<property name="removeAbandoned" value="true" />
		<property name="removeAbandonedTimeout" value="180" />
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<property name="minEvictableIdleTimeMillis" value="180000" />
	</bean>

	<!-- jdbcTemplate配置 -->
	<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">
		<property name="dataSource" ref="dataSource" />
	</bean>

	<!-- jdbc transaction -->
	<bean id="transactionManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dataSource" />
	</bean>

</beans>